<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="racepoint_component_profile.xsd" unique_identifier="ip_address"
    manufacturer="Plex" model="Home Theater" device_class="Media_server"
    minimum_component_engine_version="0" rpm_xml_version="2.6.1" alias="Plex">
    <notes>
        
        You are required to edit the guisettings.xml file located ~/Library/Application Support/Plex Home Theater/userdata
        Locate "esallinterfaces" and change this setting to "true". Besure that Plex Home Theater is not running when you do this.
        
        !!*** For thumbnails to work, you need to enter the Plex Media Servers IP address in the 'IP Address' field, and the IP address of Plex Home Theater Client on the wire.
        
        !!*** Some thumbnails may not work if you have scanned your media using an older version of Plex Media Server.
        
        !!*** This profile has been tested with a NEW library using Plex Home Thearer v1.0.13.222 and Plex Media Server v0.9.9.7
        
        ====================== Change Log ==================
        Version: 2.6.1 Change:  - Trying to improve preformance on smart host
        Version: 2.6.0 Change:  - Large update related to feedback. Improves preformance and control
        Version: 2.5.7 Change:	- Updates to improve control during playback
        Version: 2.5.6 Change:	- Removed "DIGITAL_AUDIO" from interfaces which was causing AVC to crash 7.0
        Version: 2.5.5 Change:	- Seperated analog and digital audio outputs and removed "combination mini jack"
        Version: 2.5.0 Change:  - Added command to return 'now playing' to fullscreen
        Version: 2.4.3 Change:  - Added more Status messages matches
        Version: 2.4.2 Change:  - Change frequency of URL Fetches
        Version: 2.3.15 Change:  - Updated methods of fetching URLS
        Version: 2.3.14 Change:  - Added thumbnails, and video information
</notes>
    <resource_ui_mappings>
        <resource_map resource_type="AV_EXTERNALMEDIASERVER_SOURCE" ui_map="plex"/>
    </resource_ui_mappings>
    <control_interfaces preferred="ip">
        <ip port="9090" response_time_length_ms="200" name_on_component="ETHERNET" protocol="telnet">
            <response_codes>
                <rspmessage status="success" name="ok">
                    <constant type="character">{"id":"1","jsonrpc":"2.0",</constant>
                    <data type="character" terminator_type="end_of_data"></data>
                </rspmessage>
                <rspmessage status="failure" name="error">
                    <constant type="character">{"error":{"code":</constant>
                    <data type="character" terminator_type="character" terminator=","></data>
                    <constant type="character">"message":"</constant>
                    <data type="character" terminator_type="character" terminator="&quot;">
                        <update state="lastErrorMsg" type="string"></update>
                    </data>
                    <constant type="character">}</constant>
                </rspmessage>
            </response_codes>
        </ip>
    </control_interfaces>
    <media_interfaces>
        <output name_on_component="HDMI">
            <combined_media>
                <audio_media type="hdmi_audio"/>
                <video_media type="hdmi"/>
            </combined_media>
            <resource resource_type="AV_EXTERNALMEDIASERVER_SOURCE"/>
        </output>
        <output name_on_component="Audio Out">
            <audio_media type="analog_spdif_combination_minijack"/>
            <audio_media type="rca_stereo"/>
            <resource resource_type="AV_EXTERNALMEDIASERVER_SOURCE"/>
            <resource resource_type="AV_VOLUMECONTROL_FUNCTION"/>
        </output>
        <output name_on_component="Optical Out">
            <audio_media type="optical_digital"/>
            <resource resource_type="AV_EXTERNALMEDIASERVER_SOURCE"/>
        </output>
        <output name_on_component="Coaxial Out">
            <audio_media type="coaxial_digital"/>
            <resource resource_type="AV_EXTERNALMEDIASERVER_SOURCE"/>
        </output>
        <data name_on_component="Ethernet">
            <combined_media>
                <data_media type="ethernet"/>
                <control port="9090"/>
            </combined_media>
        </data>
    </media_interfaces>
    <state_variable_list>
        <state_variable name="Power_current_power_setting" owning_logical_component="Plex" state_center_binding="CurrentPowerStatus" state_center_type="string">OFF</state_variable>
        <state_variable name="Mute_current_mute_setting" state_center_binding="CurrentMuteStatus" state_center_type="string" owning_logical_component="Plex">OFF</state_variable>
        <volume_state_variable name="Volume_current_volume" min_value="0" max_value="100" owning_logical_component="Plex" granularity="1.0" state_center_type="string" state_center_binding="CurrentVolume">0</volume_state_variable>
        <state_variable name="getPosistion" state_center_binding="getPosistion" state_center_type="boolean" owning_logical_component="Plex">false</state_variable>
        <state_variable name="progressPercentage" state_center_binding="progressPercentage" state_center_type="integer" owning_logical_component="Plex">0</state_variable>
        <state_variable name="progressHours" state_center_binding="progressHours" state_center_type="integer" owning_logical_component="Plex">0</state_variable>
        <state_variable name="progressMilliseconds" state_center_binding="progressMilliseconds" state_center_type="string" owning_logical_component="Plex">0</state_variable>
        <state_variable name="progressMinutes" state_center_binding="progressMinutes" state_center_type="string" owning_logical_component="Plex">00</state_variable>
        <state_variable name="currentType" state_center_binding="currentType" state_center_type="string" owning_logical_component="Plex"></state_variable>
        <state_variable name="currentlyDoing" state_center_binding="currentlyDoing" state_center_type="string" owning_logical_component="Plex"></state_variable>
        <state_variable name="progressSeconds" state_center_binding="progressSeconds" state_center_type="string" owning_logical_component="Plex">00</state_variable>
        <state_variable name="totalHours" state_center_binding="totalHours" state_center_type="integer" owning_logical_component="Plex">0</state_variable>
        <state_variable name="totalMilliseconds" state_center_binding="totalMilliseconds" state_center_type="string" owning_logical_component="Plex">0</state_variable>
        <state_variable name="totalMinutes" state_center_binding="totalMinutes" state_center_type="string" owning_logical_component="Plex">00</state_variable>
        <state_variable name="totalSeconds" state_center_binding="totalSeconds" state_center_type="string" owning_logical_component="Plex">00</state_variable>
        <state_variable name="isShuffled" state_center_binding="isShuffled" state_center_type="boolean" owning_logical_component="Plex">false</state_variable>
        <state_variable name="isPlay" state_center_binding="isPlay" state_center_type="boolean" owning_logical_component="Plex">false</state_variable>
        <state_variable name="isRepeatAll" state_center_binding="isRepeatAll" state_center_type="boolean" owning_logical_component="Plex">false</state_variable>
        <state_variable name="isRepeatOne" state_center_binding="isRepeatOne" state_center_type="boolean" owning_logical_component="Plex">false</state_variable>
        <state_variable name="isRepeatOff" state_center_binding="isRepeatOff" state_center_type="boolean" owning_logical_component="Plex">true</state_variable>
        <state_variable name="plot" state_center_binding="plot" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="rating" state_center_binding="rating" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="trapThumb" state_center_binding="trapThumb" state_center_type="boolean" owning_logical_component="Plex">false</state_variable>
        <state_variable name="aspectRatio" state_center_binding="aspectRatio" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="aspectRatio1" state_center_binding="aspectRatio1" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="audioChannels" state_center_binding="audioChannels" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="audioChannels1" state_center_binding="audioChannels1" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="audioCodec" state_center_binding="audioCodec" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="audioCodec1" state_center_binding="audioCodec1" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="videoCodec" state_center_binding="videoCodec" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="videoCodec1" state_center_binding="videoCodec1" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="videoResolution" state_center_binding="videoResolution" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="videoResolution1" state_center_binding="videoResolution1" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="thumbnail" state_center_binding="thumbnail" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="thumbnailpt1" state_center_binding="thumbnailpt1" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="thumbnailpt2" state_center_binding="thumbnailpt2" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="currentEpisodeNumber" state_center_binding="currentEpisodeNumber" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="currentSeasonNumber" state_center_binding="currentSeasonNumber" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="currentSeasonName" state_center_binding="currentSeasonName" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="currentEpisodeName" state_center_binding="currentEpisodeName" state_center_type="string" owning_logical_component="Plex"/>
        <state_variable name="isTVShow" state_center_binding="isTVShow" state_center_type="boolean" owning_logical_component="Plex">false</state_variable>
    </state_variable_list>
    <logical_component logical_component_name="Plex">
        <implementation>
            <output name_on_component="HDMI"/>
            <output name_on_component="Audio Out"/>
            <output name_on_component="Optical Out"/>
            <output name_on_component="Coaxial Out"/>
        </implementation>
        <status_messages>
            <status_message name="ProcessInformation_TV">
                <root_object name="none" format="json" matches_required="all">
                    <values path="result/item/episode" matches_required="at_least_one">
                        <update state="currentEpisodeNumber" type="string"/>
                    </values>
                    <values path="result/item/season" matches_required="at_least_one">
                        <update state="currentSeasonNumber" type="string"/>
                    </values>
                    <values path="result/item/showtitle" matches_required="at_least_one">
                        <update state="currentSeasonName" type="string"/>
                    </values>
                    <values path="result/item/title" matches_required="at_least_one">
                        <update state="currentEpisodeName" type="string"/>
                    </values>
                </root_object>
            </status_message>
            <status_message name="ProcessInformation_Movie">
                <root_object name="none" format="json" matches_required="all">
                    <values path="result/item/title" matches_required="at_least_one">
                        <update state="currentSeasonName" type="string"/>
                    </values>
                    <values path="result/item/year" matches_required="at_least_one">
                        <update state="currentEpisodeName" type="string"/>
                    </values>
                </root_object>
            </status_message>
            <status_message name="Playing TV Show">
                <root_object name="none" format="json" matches_required="at_least_one">
                    <values path="params/data/item/episode" matches_required="at_least_one">
                        <update state="currentEpisodeNumber" type="string"/>
                    </values>
                    <values path="params/data/item/season" matches_required="at_least_one">
                        <update state="currentSeasonNumber" type="string"/>
                    </values>
                    <values path="params/data/item/showtitle" matches_required="at_least_one">
                        <update state="currentSeasonName" type="string"/>
                    </values>
                    <values path="params/data/item/title" matches_required="at_least_one">
                        <update state="currentEpisodeName" type="string"/>
                    </values>
                </root_object>
                <run_elements>
                    <actions>
                        <action name="StartPosCheck_TV">
                            <update_state_variable name="getPosistion" update_type="set" update_source="constant">true</update_state_variable>
                            <update_state_variable name="isTVShow" update_type="set" update_source="constant">true</update_state_variable>
                            <update_state_variable name="isPlay" update_type="set" update_source="constant">true</update_state_variable>
                            <update_state_variable name="trapThumb" update_type="set" update_source="constant">true</update_state_variable>
                            <command_interface interface="ip">
                                <command response_required="no">
                                    <command_string type="character">{"jsonrpc":"2.0","method":"Player.GetItem","params":{"playerid":1,"properties":["title", "episode", "season", "showtitle"]},"id":"1"}</command_string>
                                    <delay ms_delay="100"/>
                                </command>
                            </command_interface>
                        </action>
                        <action name="GetPoster">
                            <execute_on_state_variable_condition name="isPlay" test_condition="equal">true</execute_on_state_variable_condition>
                            <command_interface interface="ip">
                                <command response_required="no">
                                    <command_string type="character">{"jsonrpc":"2.0","method":"Player.GetItem","params":{"playerid":1,"properties":["fanart"]},"id":"1"}</command_string>
                                    <delay ms_delay="100"/>
                                </command>
                            </command_interface>
                        </action>
                        <action name="GetMediaInfo">
                            <execute_on_state_variable_condition name="isPlay" test_condition="equal">true</execute_on_state_variable_condition>
                            <command_interface interface="ip">
                                <command response_required="no">
                                    <command_string type="character">{"jsonrpc":"2.0","method":"XBMC.GetInfoLabels","params":{"labels":["VideoPlayer.VideoAspect", "VideoPlayer.VideoResolution", "VideoPlayer.VideoCodec", "VideoPlayer.AudioCodec", "VideoPlayer.AudioChannels"]},"id":"1"}</command_string>
                                    <delay ms_delay="100"/>
                                </command>
                            </command_interface>
                        </action>
                    </actions>
                </run_elements>
            </status_message>
            <status_message name="Playing Movie">
                <root_object name="none" matches_required="all">
                    <values path="params/data/item/title" matches_required="none">
                        <update state="currentSeasonName" type="string"/>
                    </values>
                    <values path="params/data/item/year" matches_required="none">
                        <update state="currentEpisodeName" type="string"/>
                    </values>
                </root_object>
                <run_elements>
                    <actions>
                        <action name="StartPosCheck_Movie">
                            <update_state_variable name="getPosistion" update_type="set" update_source="constant">true</update_state_variable>
                            <update_state_variable name="isTVShow" update_type="set" update_source="constant">false</update_state_variable>
                            <update_state_variable name="isPlay" update_type="set" update_source="constant">true</update_state_variable>
                            <update_state_variable name="trapThumb" update_type="set" update_source="constant">true</update_state_variable>
                            <command_interface interface="ip">
                                <command response_required="no">
                                    <command_string type="character">{"jsonrpc":"2.0","method":"Player.GetItem","params":{"playerid":1,"properties":["title", "year"]},"id":"1"}</command_string>
                                    <delay ms_delay="100"/>
                                </command>
                            </command_interface>
                        </action>
                        <action name="GetPoster">
                            <execute_on_state_variable_condition name="isPlay" test_condition="equal">true</execute_on_state_variable_condition>
                            <command_interface interface="ip">
                                <command response_required="no">
                                    <command_string type="character">{"jsonrpc":"2.0","method":"Player.GetItem","params":{"playerid":1,"properties":["fanart"]},"id":"1"}</command_string>
                                    <delay ms_delay="100"/>
                                </command>
                            </command_interface>
                        </action>
                        <action name="GetMediaInfo">
                            <execute_on_state_variable_condition name="isPlay" test_condition="equal">true</execute_on_state_variable_condition>
                            <command_interface interface="ip">
                                <command response_required="no">
                                    <command_string type="character">{"jsonrpc":"2.0","method":"XBMC.GetInfoLabels","params":{"labels":["VideoPlayer.VideoAspect", "VideoPlayer.VideoResolution", "VideoPlayer.VideoCodec", "VideoPlayer.AudioCodec", "VideoPlayer.AudioChannels"]},"id":"1"}</command_string>
                                    <delay ms_delay="100"/>
                                </command>
                            </command_interface>
                        </action>
                    </actions>
                </run_elements>
            </status_message>
            <status_message name="Playing Stoped">
                <constant type="character">{"jsonrpc":"2.0","method":"Player.OnStop"</constant>
                <data type="character" terminator_type="end_of_data"/>
                <run_elements>
                    <actions>
                        <action name="StopPosCheck">
                            <update_state_variable name="getPosistion" update_type="set" update_source="constant">false</update_state_variable>
                            <update_state_variable name="progressPercentage" update_type="set" update_source="constant">0</update_state_variable>
                            <update_state_variable name="progressHours" update_type="set" update_source="constant">0</update_state_variable>
                            <update_state_variable name="progressMilliseconds" update_type="set" update_source="constant">0</update_state_variable>
                            <update_state_variable name="progressMinutes" update_type="set" update_source="constant">00</update_state_variable>
                            <update_state_variable name="progressSeconds" update_type="set" update_source="constant">00</update_state_variable>
                            <update_state_variable name="totalHours" update_type="set" update_source="constant">0</update_state_variable>
                            <update_state_variable name="totalMilliseconds" update_type="set" update_source="constant">0</update_state_variable>
                            <update_state_variable name="totalMinutes" update_type="set" update_source="constant">00</update_state_variable>
                            <update_state_variable name="totalSeconds" update_type="set" update_source="constant">00</update_state_variable>
                            <update_state_variable name="totalTime" update_type="set" update_source="constant">0:00:00</update_state_variable>
                            <update_state_variable name="progressTime" update_type="set" update_source="constant">0:00:00</update_state_variable>
                            <update_state_variable name="currentEpisodeName" update_type="set" update_source="constant"/>
                            <update_state_variable name="currentEpisodeNumber" update_type="set" update_source="constant"/>
                            <update_state_variable name="currentSeasonNumber" update_type="set" update_source="constant"/>
                            <update_state_variable name="currentSeasonName" update_type="set" update_source="constant"/>
                            <update_state_variable name="isTVShow" update_type="set" update_source="constant">false</update_state_variable>
                            <update_state_variable name="isPlay" update_type="set" update_source="constant">false</update_state_variable>
                            <update_state_variable name="thumbnail" update_type="set" update_source="constant"/>
                            <update_state_variable name="aspectRatio" update_type="set" update_source="constant"/>
                            <update_state_variable name="audioChannels" update_type="set" update_source="constant"/>
                            <update_state_variable name="audioCodec" update_type="set" update_source="constant"/>
                            <update_state_variable name="videoCodec" update_type="set" update_source="constant"/>
                            <update_state_variable name="videoFrameRate" update_type="set" update_source="constant"/>
                            <update_state_variable name="videoResolution" update_type="set" update_source="constant"/>
                        </action>
                    </actions>
                </run_elements>
            </status_message>
            <status_message name="Playing Paused">
                <constant type="character">{"jsonrpc":"2.0","method":"Player.OnPause"</constant>
                <data type="character" terminator_type="end_of_data"/>
                <run_elements>
                    <actions>
                        <action name="StartPosCheck">
                            <update_state_variable name="getPosistion" update_type="set" update_source="constant">false</update_state_variable>
                            <update_state_variable name="isPlay" update_type="set" update_source="constant">false</update_state_variable>
                            <update_state_variable name="currentlyDoing" update_type="set" update_source="constant">Player.OnPause</update_state_variable>
                        </action>
                    </actions>
                </run_elements>
            </status_message>
            <status_message name="GetPlayingPosistion">
                <root_object name="none" format="json" matches_required="at_least_one">
                    <values path="result/percentage" matches_required="none">
                        <update state="progressPercentage" type="integer"/>
                    </values>
                    <values path="result/time/hours" matches_required="none">
                        <update state="progressHours" type="integer"/>
                    </values>
                    <values path="result/time/minutes" matches_required="none">
                        <value_map match_required="yes">
                            <map key="0">
                                <update state="progressMinutes" type="string">00</update>
                            </map>
                            <map key="1">
                                <update state="progressMinutes" type="string">01</update>
                            </map>
                            <map key="2">
                                <update state="progressMinutes" type="string">02</update>
                            </map>
                            <map key="3">
                                <update state="progressMinutes" type="string">03</update>
                            </map>
                            <map key="4">
                                <update state="progressMinutes" type="string">04</update>
                            </map>
                            <map key="5">
                                <update state="progressMinutes" type="string">05</update>
                            </map>
                            <map key="6">
                                <update state="progressMinutes" type="string">06</update>
                            </map>
                            <map key="7">
                                <update state="progressMinutes" type="string">07</update>
                            </map>
                            <map key="8">
                                <update state="progressMinutes" type="string">08</update>
                            </map>
                            <map key="9">
                                <update state="progressMinutes" type="string">09</update>
                            </map>
                            <map key="10">
                                <update state="progressMinutes" type="string">10</update>
                            </map>
                            <map key="11">
                                <update state="progressMinutes" type="string">11</update>
                            </map>
                            <map key="12">
                                <update state="progressMinutes" type="string">12</update>
                            </map>
                            <map key="13">
                                <update state="progressMinutes" type="string">13</update>
                            </map>
                            <map key="14">
                                <update state="progressMinutes" type="string">14</update>
                            </map>
                            <map key="15">
                                <update state="progressMinutes" type="string">15</update>
                            </map>
                            <map key="16">
                                <update state="progressMinutes" type="string">16</update>
                            </map>
                            <map key="17">
                                <update state="progressMinutes" type="string">17</update>
                            </map>
                            <map key="18">
                                <update state="progressMinutes" type="string">18</update>
                            </map>
                            <map key="19">
                                <update state="progressMinutes" type="string">19</update>
                            </map>
                            <map key="20">
                                <update state="progressMinutes" type="string">20</update>
                            </map>
                            <map key="21">
                                <update state="progressMinutes" type="string">21</update>
                            </map>
                            <map key="22">
                                <update state="progressMinutes" type="string">22</update>
                            </map>
                            <map key="23">
                                <update state="progressMinutes" type="string">23</update>
                            </map>
                            <map key="24">
                                <update state="progressMinutes" type="string">24</update>
                            </map>
                            <map key="25">
                                <update state="progressMinutes" type="string">25</update>
                            </map>
                            <map key="26">
                                <update state="progressMinutes" type="string">26</update>
                            </map>
                            <map key="27">
                                <update state="progressMinutes" type="string">27</update>
                            </map>
                            <map key="28">
                                <update state="progressMinutes" type="string">28</update>
                            </map>
                            <map key="29">
                                <update state="progressMinutes" type="string">29</update>
                            </map>
                            <map key="30">
                                <update state="progressMinutes" type="string">30</update>
                            </map>
                            <map key="31">
                                <update state="progressMinutes" type="string">31</update>
                            </map>
                            <map key="32">
                                <update state="progressMinutes" type="string">32</update>
                            </map>
                            <map key="33">
                                <update state="progressMinutes" type="string">33</update>
                            </map>
                            <map key="34">
                                <update state="progressMinutes" type="string">34</update>
                            </map>
                            <map key="35">
                                <update state="progressMinutes" type="string">35</update>
                            </map>
                            <map key="36">
                                <update state="progressMinutes" type="string">36</update>
                            </map>
                            <map key="37">
                                <update state="progressMinutes" type="string">37</update>
                            </map>
                            <map key="38">
                                <update state="progressMinutes" type="string">38</update>
                            </map>
                            <map key="39">
                                <update state="progressMinutes" type="string">39</update>
                            </map>
                            <map key="40">
                                <update state="progressMinutes" type="string">40</update>
                            </map>
                            <map key="41">
                                <update state="progressMinutes" type="string">41</update>
                            </map>
                            <map key="42">
                                <update state="progressMinutes" type="string">42</update>
                            </map>
                            <map key="43">
                                <update state="progressMinutes" type="string">43</update>
                            </map>
                            <map key="44">
                                <update state="progressMinutes" type="string">44</update>
                            </map>
                            <map key="45">
                                <update state="progressMinutes" type="string">45</update>
                            </map>
                            <map key="46">
                                <update state="progressMinutes" type="string">46</update>
                            </map>
                            <map key="47">
                                <update state="progressMinutes" type="string">47</update>
                            </map>
                            <map key="48">
                                <update state="progressMinutes" type="string">48</update>
                            </map>
                            <map key="49">
                                <update state="progressMinutes" type="string">49</update>
                            </map>
                            <map key="50">
                                <update state="progressMinutes" type="string">50</update>
                            </map>
                            <map key="51">
                                <update state="progressMinutes" type="string">51</update>
                            </map>
                            <map key="52">
                                <update state="progressMinutes" type="string">52</update>
                            </map>
                            <map key="53">
                                <update state="progressMinutes" type="string">53</update>
                            </map>
                            <map key="54">
                                <update state="progressMinutes" type="string">54</update>
                            </map>
                            <map key="55">
                                <update state="progressMinutes" type="string">55</update>
                            </map>
                            <map key="56">
                                <update state="progressMinutes" type="string">56</update>
                            </map>
                            <map key="57">
                                <update state="progressMinutes" type="string">57</update>
                            </map>
                            <map key="58">
                                <update state="progressMinutes" type="string">58</update>
                            </map>
                            <map key="59">
                                <update state="progressMinutes" type="string">59</update>
                            </map>
                            <map key="60">
                                <update state="progressMinutes" type="string">60</update>
                            </map>
                        </value_map>
                    </values>
                    <values path="result/time/seconds" matches_required="none">
                        <value_map match_required="yes">
                            <map key="0">
                                <update state="progressSeconds" type="string">00</update>
                            </map>
                            <map key="1">
                                <update state="progressSeconds" type="string">01</update>
                            </map>
                            <map key="2">
                                <update state="progressSeconds" type="string">02</update>
                            </map>
                            <map key="3">
                                <update state="progressSeconds" type="string">03</update>
                            </map>
                            <map key="4">
                                <update state="progressSeconds" type="string">04</update>
                            </map>
                            <map key="5">
                                <update state="progressSeconds" type="string">05</update>
                            </map>
                            <map key="6">
                                <update state="progressSeconds" type="string">06</update>
                            </map>
                            <map key="7">
                                <update state="progressSeconds" type="string">07</update>
                            </map>
                            <map key="8">
                                <update state="progressSeconds" type="string">08</update>
                            </map>
                            <map key="9">
                                <update state="progressSeconds" type="string">09</update>
                            </map>
                            <map key="10">
                                <update state="progressSeconds" type="string">10</update>
                            </map>
                            <map key="11">
                                <update state="progressSeconds" type="string">11</update>
                            </map>
                            <map key="12">
                                <update state="progressSeconds" type="string">12</update>
                            </map>
                            <map key="13">
                                <update state="progressSeconds" type="string">13</update>
                            </map>
                            <map key="14">
                                <update state="progressSeconds" type="string">14</update>
                            </map>
                            <map key="15">
                                <update state="progressSeconds" type="string">15</update>
                            </map>
                            <map key="16">
                                <update state="progressSeconds" type="string">16</update>
                            </map>
                            <map key="17">
                                <update state="progressSeconds" type="string">17</update>
                            </map>
                            <map key="18">
                                <update state="progressSeconds" type="string">18</update>
                            </map>
                            <map key="19">
                                <update state="progressSeconds" type="string">19</update>
                            </map>
                            <map key="20">
                                <update state="progressSeconds" type="string">20</update>
                            </map>
                            <map key="21">
                                <update state="progressSeconds" type="string">21</update>
                            </map>
                            <map key="22">
                                <update state="progressSeconds" type="string">22</update>
                            </map>
                            <map key="23">
                                <update state="progressSeconds" type="string">23</update>
                            </map>
                            <map key="24">
                                <update state="progressSeconds" type="string">24</update>
                            </map>
                            <map key="25">
                                <update state="progressSeconds" type="string">25</update>
                            </map>
                            <map key="26">
                                <update state="progressSeconds" type="string">26</update>
                            </map>
                            <map key="27">
                                <update state="progressSeconds" type="string">27</update>
                            </map>
                            <map key="28">
                                <update state="progressSeconds" type="string">28</update>
                            </map>
                            <map key="29">
                                <update state="progressSeconds" type="string">29</update>
                            </map>
                            <map key="30">
                                <update state="progressSeconds" type="string">30</update>
                            </map>
                            <map key="31">
                                <update state="progressSeconds" type="string">31</update>
                            </map>
                            <map key="32">
                                <update state="progressSeconds" type="string">32</update>
                            </map>
                            <map key="33">
                                <update state="progressSeconds" type="string">33</update>
                            </map>
                            <map key="34">
                                <update state="progressSeconds" type="string">34</update>
                            </map>
                            <map key="35">
                                <update state="progressSeconds" type="string">35</update>
                            </map>
                            <map key="36">
                                <update state="progressSeconds" type="string">36</update>
                            </map>
                            <map key="37">
                                <update state="progressSeconds" type="string">37</update>
                            </map>
                            <map key="38">
                                <update state="progressSeconds" type="string">38</update>
                            </map>
                            <map key="39">
                                <update state="progressSeconds" type="string">39</update>
                            </map>
                            <map key="40">
                                <update state="progressSeconds" type="string">40</update>
                            </map>
                            <map key="41">
                                <update state="progressSeconds" type="string">41</update>
                            </map>
                            <map key="42">
                                <update state="progressSeconds" type="string">42</update>
                            </map>
                            <map key="43">
                                <update state="progressSeconds" type="string">43</update>
                            </map>
                            <map key="44">
                                <update state="progressSeconds" type="string">44</update>
                            </map>
                            <map key="45">
                                <update state="progressSeconds" type="string">45</update>
                            </map>
                            <map key="46">
                                <update state="progressSeconds" type="string">46</update>
                            </map>
                            <map key="47">
                                <update state="progressSeconds" type="string">47</update>
                            </map>
                            <map key="48">
                                <update state="progressSeconds" type="string">48</update>
                            </map>
                            <map key="49">
                                <update state="progressSeconds" type="string">49</update>
                            </map>
                            <map key="50">
                                <update state="progressSeconds" type="string">50</update>
                            </map>
                            <map key="51">
                                <update state="progressSeconds" type="string">51</update>
                            </map>
                            <map key="52">
                                <update state="progressSeconds" type="string">52</update>
                            </map>
                            <map key="53">
                                <update state="progressSeconds" type="string">53</update>
                            </map>
                            <map key="54">
                                <update state="progressSeconds" type="string">54</update>
                            </map>
                            <map key="55">
                                <update state="progressSeconds" type="string">55</update>
                            </map>
                            <map key="56">
                                <update state="progressSeconds" type="string">56</update>
                            </map>
                            <map key="57">
                                <update state="progressSeconds" type="string">57</update>
                            </map>
                            <map key="58">
                                <update state="progressSeconds" type="string">58</update>
                            </map>
                            <map key="59">
                                <update state="progressSeconds" type="string">59</update>
                            </map>
                            <map key="60">
                                <update state="progressSeconds" type="string">60</update>
                            </map>
                        </value_map>
                    </values>
                    <values path="result/totaltime/hours" matches_required="none">
                        <update state="totalHours" type="integer"/>
                    </values>
                    <values path="result/totaltime/minutes" matches_required="none">
                        <value_map match_required="yes">
                            <map key="0">
                                <update state="totalMinutes" type="string">00</update>
                            </map>
                            <map key="1">
                                <update state="totalMinutes" type="string">01</update>
                            </map>
                            <map key="2">
                                <update state="totalMinutes" type="string">02</update>
                            </map>
                            <map key="3">
                                <update state="totalMinutes" type="string">03</update>
                            </map>
                            <map key="4">
                                <update state="totalMinutes" type="string">04</update>
                            </map>
                            <map key="5">
                                <update state="totalMinutes" type="string">05</update>
                            </map>
                            <map key="6">
                                <update state="totalMinutes" type="string">06</update>
                            </map>
                            <map key="7">
                                <update state="totalMinutes" type="string">07</update>
                            </map>
                            <map key="8">
                                <update state="totalMinutes" type="string">08</update>
                            </map>
                            <map key="9">
                                <update state="totalMinutes" type="string">09</update>
                            </map>
                            <map key="10">
                                <update state="totalMinutes" type="string">10</update>
                            </map>
                            <map key="11">
                                <update state="totalMinutes" type="string">11</update>
                            </map>
                            <map key="12">
                                <update state="totalMinutes" type="string">12</update>
                            </map>
                            <map key="13">
                                <update state="totalMinutes" type="string">13</update>
                            </map>
                            <map key="14">
                                <update state="totalMinutes" type="string">14</update>
                            </map>
                            <map key="15">
                                <update state="totalMinutes" type="string">15</update>
                            </map>
                            <map key="16">
                                <update state="totalMinutes" type="string">16</update>
                            </map>
                            <map key="17">
                                <update state="totalMinutes" type="string">17</update>
                            </map>
                            <map key="18">
                                <update state="totalMinutes" type="string">18</update>
                            </map>
                            <map key="19">
                                <update state="totalMinutes" type="string">19</update>
                            </map>
                            <map key="20">
                                <update state="totalMinutes" type="string">20</update>
                            </map>
                            <map key="21">
                                <update state="totalMinutes" type="string">21</update>
                            </map>
                            <map key="22">
                                <update state="totalMinutes" type="string">22</update>
                            </map>
                            <map key="23">
                                <update state="totalMinutes" type="string">23</update>
                            </map>
                            <map key="24">
                                <update state="totalMinutes" type="string">24</update>
                            </map>
                            <map key="25">
                                <update state="totalMinutes" type="string">25</update>
                            </map>
                            <map key="26">
                                <update state="totalMinutes" type="string">26</update>
                            </map>
                            <map key="27">
                                <update state="totalMinutes" type="string">27</update>
                            </map>
                            <map key="28">
                                <update state="totalMinutes" type="string">28</update>
                            </map>
                            <map key="29">
                                <update state="totalMinutes" type="string">29</update>
                            </map>
                            <map key="30">
                                <update state="totalMinutes" type="string">30</update>
                            </map>
                            <map key="31">
                                <update state="totalMinutes" type="string">31</update>
                            </map>
                            <map key="32">
                                <update state="totalMinutes" type="string">32</update>
                            </map>
                            <map key="33">
                                <update state="totalMinutes" type="string">33</update>
                            </map>
                            <map key="34">
                                <update state="totalMinutes" type="string">34</update>
                            </map>
                            <map key="35">
                                <update state="totalMinutes" type="string">35</update>
                            </map>
                            <map key="36">
                                <update state="totalMinutes" type="string">36</update>
                            </map>
                            <map key="37">
                                <update state="totalMinutes" type="string">37</update>
                            </map>
                            <map key="38">
                                <update state="totalMinutes" type="string">38</update>
                            </map>
                            <map key="39">
                                <update state="totalMinutes" type="string">39</update>
                            </map>
                            <map key="40">
                                <update state="totalMinutes" type="string">40</update>
                            </map>
                            <map key="41">
                                <update state="totalMinutes" type="string">41</update>
                            </map>
                            <map key="42">
                                <update state="totalMinutes" type="string">42</update>
                            </map>
                            <map key="43">
                                <update state="totalMinutes" type="string">43</update>
                            </map>
                            <map key="44">
                                <update state="totalMinutes" type="string">44</update>
                            </map>
                            <map key="45">
                                <update state="totalMinutes" type="string">45</update>
                            </map>
                            <map key="46">
                                <update state="totalMinutes" type="string">46</update>
                            </map>
                            <map key="47">
                                <update state="totalMinutes" type="string">47</update>
                            </map>
                            <map key="48">
                                <update state="totalMinutes" type="string">48</update>
                            </map>
                            <map key="49">
                                <update state="totalMinutes" type="string">49</update>
                            </map>
                            <map key="50">
                                <update state="totalMinutes" type="string">50</update>
                            </map>
                            <map key="51">
                                <update state="totalMinutes" type="string">51</update>
                            </map>
                            <map key="52">
                                <update state="totalMinutes" type="string">52</update>
                            </map>
                            <map key="53">
                                <update state="totalMinutes" type="string">53</update>
                            </map>
                            <map key="54">
                                <update state="totalMinutes" type="string">54</update>
                            </map>
                            <map key="55">
                                <update state="totalMinutes" type="string">55</update>
                            </map>
                            <map key="56">
                                <update state="totalMinutes" type="string">56</update>
                            </map>
                            <map key="57">
                                <update state="totalMinutes" type="string">57</update>
                            </map>
                            <map key="58">
                                <update state="totalMinutes" type="string">58</update>
                            </map>
                            <map key="59">
                                <update state="totalMinutes" type="string">59</update>
                            </map>
                            <map key="60">
                                <update state="totalMinutes" type="string">60</update>
                            </map>
                        </value_map>
                    </values>
                    <values path="result/totaltime/seconds" matches_required="none">
                        <value_map match_required="yes">
                            <map key="0">
                                <update state="totalSeconds" type="string">00</update>
                            </map>
                            <map key="1">
                                <update state="totalSeconds" type="string">01</update>
                            </map>
                            <map key="2">
                                <update state="totalSeconds" type="string">02</update>
                            </map>
                            <map key="3">
                                <update state="totalSeconds" type="string">03</update>
                            </map>
                            <map key="4">
                                <update state="totalSeconds" type="string">04</update>
                            </map>
                            <map key="5">
                                <update state="totalSeconds" type="string">05</update>
                            </map>
                            <map key="6">
                                <update state="totalSeconds" type="string">06</update>
                            </map>
                            <map key="7">
                                <update state="totalSeconds" type="string">07</update>
                            </map>
                            <map key="8">
                                <update state="totalSeconds" type="string">08</update>
                            </map>
                            <map key="9">
                                <update state="totalSeconds" type="string">09</update>
                            </map>
                            <map key="10">
                                <update state="totalSeconds" type="string">10</update>
                            </map>
                            <map key="11">
                                <update state="totalSeconds" type="string">11</update>
                            </map>
                            <map key="12">
                                <update state="totalSeconds" type="string">12</update>
                            </map>
                            <map key="13">
                                <update state="totalSeconds" type="string">13</update>
                            </map>
                            <map key="14">
                                <update state="totalSeconds" type="string">14</update>
                            </map>
                            <map key="15">
                                <update state="totalSeconds" type="string">15</update>
                            </map>
                            <map key="16">
                                <update state="totalSeconds" type="string">16</update>
                            </map>
                            <map key="17">
                                <update state="totalSeconds" type="string">17</update>
                            </map>
                            <map key="18">
                                <update state="totalSeconds" type="string">18</update>
                            </map>
                            <map key="19">
                                <update state="totalSeconds" type="string">19</update>
                            </map>
                            <map key="20">
                                <update state="totalSeconds" type="string">20</update>
                            </map>
                            <map key="21">
                                <update state="totalSeconds" type="string">21</update>
                            </map>
                            <map key="22">
                                <update state="totalSeconds" type="string">22</update>
                            </map>
                            <map key="23">
                                <update state="totalSeconds" type="string">23</update>
                            </map>
                            <map key="24">
                                <update state="totalSeconds" type="string">24</update>
                            </map>
                            <map key="25">
                                <update state="totalSeconds" type="string">25</update>
                            </map>
                            <map key="26">
                                <update state="totalSeconds" type="string">26</update>
                            </map>
                            <map key="27">
                                <update state="totalSeconds" type="string">27</update>
                            </map>
                            <map key="28">
                                <update state="totalSeconds" type="string">28</update>
                            </map>
                            <map key="29">
                                <update state="totalSeconds" type="string">29</update>
                            </map>
                            <map key="30">
                                <update state="totalSeconds" type="string">30</update>
                            </map>
                            <map key="31">
                                <update state="totalSeconds" type="string">31</update>
                            </map>
                            <map key="32">
                                <update state="totalSeconds" type="string">32</update>
                            </map>
                            <map key="33">
                                <update state="totalSeconds" type="string">33</update>
                            </map>
                            <map key="34">
                                <update state="totalSeconds" type="string">34</update>
                            </map>
                            <map key="35">
                                <update state="totalSeconds" type="string">35</update>
                            </map>
                            <map key="36">
                                <update state="totalSeconds" type="string">36</update>
                            </map>
                            <map key="37">
                                <update state="totalSeconds" type="string">37</update>
                            </map>
                            <map key="38">
                                <update state="totalSeconds" type="string">38</update>
                            </map>
                            <map key="39">
                                <update state="totalSeconds" type="string">39</update>
                            </map>
                            <map key="40">
                                <update state="totalSeconds" type="string">40</update>
                            </map>
                            <map key="41">
                                <update state="totalSeconds" type="string">41</update>
                            </map>
                            <map key="42">
                                <update state="totalSeconds" type="string">42</update>
                            </map>
                            <map key="43">
                                <update state="totalSeconds" type="string">43</update>
                            </map>
                            <map key="44">
                                <update state="totalSeconds" type="string">44</update>
                            </map>
                            <map key="45">
                                <update state="totalSeconds" type="string">45</update>
                            </map>
                            <map key="46">
                                <update state="totalSeconds" type="string">46</update>
                            </map>
                            <map key="47">
                                <update state="totalSeconds" type="string">47</update>
                            </map>
                            <map key="48">
                                <update state="totalSeconds" type="string">48</update>
                            </map>
                            <map key="49">
                                <update state="totalSeconds" type="string">49</update>
                            </map>
                            <map key="50">
                                <update state="totalSeconds" type="string">50</update>
                            </map>
                            <map key="51">
                                <update state="totalSeconds" type="string">51</update>
                            </map>
                            <map key="52">
                                <update state="totalSeconds" type="string">52</update>
                            </map>
                            <map key="53">
                                <update state="totalSeconds" type="string">53</update>
                            </map>
                            <map key="54">
                                <update state="totalSeconds" type="string">54</update>
                            </map>
                            <map key="55">
                                <update state="totalSeconds" type="string">55</update>
                            </map>
                            <map key="56">
                                <update state="totalSeconds" type="string">56</update>
                            </map>
                            <map key="57">
                                <update state="totalSeconds" type="string">57</update>
                            </map>
                            <map key="58">
                                <update state="totalSeconds" type="string">58</update>
                            </map>
                            <map key="59">
                                <update state="totalSeconds" type="string">59</update>
                            </map>
                            <map key="60">
                                <update state="totalSeconds" type="string">60</update>
                            </map>
                        </value_map>
                    </values>
                </root_object>
            </status_message>
            <status_message name="GetThumbnailImage">
                <constant type="character">{"id":"1","jsonrpc":"2.0","result":{"item":{"fanart":"image://plexserver</constant>
                <data type="character" terminator_type="character" terminator="."/>
                <constant type="character">0.0.1%253a32400%252flibrary%252fmetadata%252f</constant>
                <data type="character" terminator_type="character" terminator="%">
                    <update state="thumbnailpt1" type="string"/>
                </data>
                <constant type="character">252fart%252f</constant>
                <data type="character" terminator_type="character" terminator="%">
                    <update state="thumbnailpt2" type="string"/>
                </data>
                <data type="character" terminator_type="end_of_data"/>
                <run_elements>
                    <actions>
                        <action name="updateThumbnail">
                            <update_state_variable name="thumbnail" update_type="set" update_source="constant">http://</update_state_variable>
                            <update_state_variable name="thumbnail" update_type="append" update_source="state_variable">UID</update_state_variable>
                            <update_state_variable name="thumbnail" update_type="append" update_source="constant">:32400/library/metadata/</update_state_variable>
                            <update_state_variable name="thumbnail" update_type="append" update_source="state_variable">thumbnailpt1</update_state_variable>
                            <update_state_variable name="thumbnail" update_type="append" update_source="constant">/thumb/</update_state_variable>
                            <update_state_variable name="thumbnail" update_type="append" update_source="state_variable">thumbnailpt2</update_state_variable>
                            <update_state_variable name="getPosistion" update_type="set" update_source="constant">true</update_state_variable>
                        </action>
                    </actions>
                </run_elements>
            </status_message>
            <status_message name="GetStatsImages">
                <root_object name="none" format="json" matches_required="at_least_one">
                    <values path="result/VideoPlayer.AudioChannels" matches_required="at_least_one">
                        <update state="audioChannels1" type="string"/>
                    </values>
                    <values path="result/VideoPlayer.AudioCodec" matches_required="at_least_one">
                        <update state="audioCodec1" type="string"/>
                    </values>
                    <values path="result/VideoPlayer.VideoAspect" matches_required="at_least_one">
                        <update state="aspectRatio1" type="string"/>
                    </values>
                    <values path="result/VideoPlayer.VideoCodec" matches_required="at_least_one">
                        <update state="videoCodec1" type="string"/>
                    </values>
                    <values path="result/VideoPlayer.VideoResolution" matches_required="at_least_one">
                        <update state="videoResolution1" type="string"/>
                    </values>
                </root_object>
                <run_elements>
                    <actions>
                        <action name="updateThumbnail">
                            <update_state_variable name="aspectRatio" update_type="set" update_source="constant">http://</update_state_variable>
                            <update_state_variable name="aspectRatio" update_type="append" update_source="state_variable">UID</update_state_variable>
                            <update_state_variable name="aspectRatio" update_type="append" update_source="constant">:32400/system/bundle/media/flags/aspectRatio/</update_state_variable>
                            <update_state_variable name="aspectRatio" update_type="append" update_source="state_variable">aspectRatio1</update_state_variable>
                            <update_state_variable name="audioChannels" update_type="set" update_source="constant">http://</update_state_variable>
                            <update_state_variable name="audioChannels" update_type="append" update_source="state_variable">UID</update_state_variable>
                            <update_state_variable name="audioChannels" update_type="append" update_source="constant">:32400/system/bundle/media/flags/audioChannels/</update_state_variable>
                            <update_state_variable name="audioChannels" update_type="append" update_source="state_variable">audioChannels1</update_state_variable>
                            <update_state_variable name="audioCodec" update_type="set" update_source="constant">http://</update_state_variable>
                            <update_state_variable name="audioCodec" update_type="append" update_source="state_variable">UID</update_state_variable>
                            <update_state_variable name="audioCodec" update_type="append" update_source="constant">:32400/system/bundle/media/flags/audioCodec/</update_state_variable>
                            <update_state_variable name="audioCodec" update_type="append" update_source="state_variable">audioCodec1</update_state_variable>
                            <update_state_variable name="videoCodec" update_type="set" update_source="constant">http://</update_state_variable>
                            <update_state_variable name="videoCodec" update_type="append" update_source="state_variable">UID</update_state_variable>
                            <update_state_variable name="videoCodec" update_type="append" update_source="constant">:32400/system/bundle/media/flags/videoCodec/</update_state_variable>
                            <update_state_variable name="videoCodec" update_type="append" update_source="state_variable">videoCodec1</update_state_variable>
                            <update_state_variable name="videoResolution" update_type="set" update_source="constant">http://</update_state_variable>
                            <update_state_variable name="videoResolution" update_type="append" update_source="state_variable">UID</update_state_variable>
                            <update_state_variable name="videoResolution" update_type="append" update_source="constant">:32400/system/bundle/media/flags/videoResolution/</update_state_variable>
                            <update_state_variable name="videoResolution" update_type="append" update_source="state_variable">videoResolution1</update_state_variable>
                        </action>
                    </actions>
                </run_elements>
            </status_message>
            <status_message name="Shuffle">
                <constant type="character">{"jsonrpc":"2.0","method":"Player.OnPropertyChanged","params":{"data":{"player":{"playerid":1},"property":{"shuffled":</constant>
                <data type="character" terminator_type="character" terminator="}">
                    <data_map match_required="yes">
                        <map key="true">
                            <update state="isShuffled" type="boolean">true</update>
                        </map>
                        <map key="false">
                            <update state="isShuffled" type="boolean">false</update>
                        </map>
                    </data_map>
                </data>
                <data type="character" terminator_type="end_of_data"/>
            </status_message>
            <status_message name="Repeat">
                <constant type="character">{"jsonrpc":"2.0","method":"Player.OnPropertyChanged","params":{"data":{"player":{"playerid":1},"property":{"repeat":"</constant>
                <data type="character" terminator_type="character" terminator="&quot;">
                    <data_map match_required="yes">
                        <map key="all">
                            <update state="isRepeatAll" type="boolean">true</update>
                            <update state="isRepeatOff" type="boolean">false</update>
                            <update state="isRepeatOne" type="boolean">false</update>
                        </map>
                        <map key="one">
                            <update state="isRepeatOne" type="boolean">true</update>
                            <update state="isRepeatOff" type="boolean">false</update>
                            <update state="isRepeatAll" type="boolean">false</update>
                        </map>
                        <map key="off">
                            <update state="isRepeatOff" type="boolean">true</update>
                            <update state="isRepeatOne" type="boolean">false</update>
                            <update state="isRepeatAll" type="boolean">false</update>
                        </map>
                    </data_map>
                </data>
                <data type="character" terminator_type="end_of_data"/>
            </status_message>
            <status_message name="Volume">
                <root_object name="none" matches_required="all">
                    <values path="params/data/muted" matches_required="all">
                        <value_map match_required="yes">
                            <map key="true">
                                <update state="Mute_current_mute_setting" type="string">ON</update>
                            </map>
                            <map key="false">
                                <update state="Mute_current_mute_setting" type="string">OFF</update>
                            </map>
                        </value_map>
                    </values>
                    <values path="params/data/volume" matches_required="all">
                        <update state="Volume_current_volume" type="integer"/>
                    </values>
                </root_object>
            </status_message>
            <status_message name="Playing Has stopped and we missed the queue">
                <constant type="character">{"error":{"code":-32100,"message":"Failed to execute method."}</constant>
                <run_elements>
                    <actions>
                        <action name="Stop Query">
                            <update_state_variable name="getPosistion" update_type="set" update_source="constant">false</update_state_variable>
                            <update_state_variable name="progressPercentage" update_type="set" update_source="constant">0</update_state_variable>
                            <update_state_variable name="progressHours" update_type="set" update_source="constant">0</update_state_variable>
                            <update_state_variable name="progressMilliseconds" update_type="set" update_source="constant">0</update_state_variable>
                            <update_state_variable name="progressMinutes" update_type="set" update_source="constant">00</update_state_variable>
                            <update_state_variable name="progressSeconds" update_type="set" update_source="constant">00</update_state_variable>
                            <update_state_variable name="totalHours" update_type="set" update_source="constant">0</update_state_variable>
                            <update_state_variable name="totalMilliseconds" update_type="set" update_source="constant">0</update_state_variable>
                            <update_state_variable name="totalMinutes" update_type="set" update_source="constant">00</update_state_variable>
                            <update_state_variable name="totalSeconds" update_type="set" update_source="constant">00</update_state_variable>
                            <update_state_variable name="totalTime" update_type="set" update_source="constant">0:00:00</update_state_variable>
                            <update_state_variable name="progressTime" update_type="set" update_source="constant">0:00:00</update_state_variable>
                            <update_state_variable name="currentEpisodeName" update_type="set" update_source="constant"/>
                            <update_state_variable name="currentEpisodeNumber" update_type="set" update_source="constant"/>
                            <update_state_variable name="currentSeasonNumber" update_type="set" update_source="constant"/>
                            <update_state_variable name="currentSeasonName" update_type="set" update_source="constant"/>
                            <update_state_variable name="isTVShow" update_type="set" update_source="constant">false</update_state_variable>
                            <update_state_variable name="isPlay" update_type="set" update_source="constant">false</update_state_variable>
                            <update_state_variable name="thumbnail" update_type="set" update_source="constant"/>
                            <update_state_variable name="aspectRatio" update_type="set" update_source="constant"/>
                            <update_state_variable name="audioChannels" update_type="set" update_source="constant"/>
                            <update_state_variable name="audioCodec" update_type="set" update_source="constant"/>
                            <update_state_variable name="videoCodec" update_type="set" update_source="constant"/>
                            <update_state_variable name="videoFrameRate" update_type="set" update_source="constant"/>
                            <update_state_variable name="videoResolution" update_type="set" update_source="constant"/>
                        </action>
                    </actions>
                </run_elements>
            </status_message>
            <status_message name="OK">
                <constant type="character">{"id":"1","jsonrpc":"2.0","result":"</constant>
                <data type="character" terminator="&quot;" terminator_type="character">
                    <update state="holdingState" type="string"/>
                </data>
                <constant type="character">}</constant>
            </status_message>
            <status_message name="Playing Started">
                <root_object name="none" format="json" matches_required="at_least_one">
                    <values path="params/data/item/type" matches_required="at_least_one">
                        <update state="currentType" type="string"/>
                    </values>
                    <values path="method" matches_required="at_least_one">
                        <update state="currentlyDoing" type="string"/>
                    </values>
                </root_object>
                <run_elements>
                    <actions>
                        <action name="StartPosCheck_TV">
                            <execute_on_state_variable_condition name="currentType" test_condition="equal">episode</execute_on_state_variable_condition>
                            <execute_on_state_variable_condition name="currentlyDoing" test_condition="equal">Player.OnPlay</execute_on_state_variable_condition>
                            <update_state_variable name="getPosistion" update_type="set" update_source="constant">true</update_state_variable>
                            <update_state_variable name="isTVShow" update_type="set" update_source="constant">true</update_state_variable>
                            <update_state_variable name="isPlay" update_type="set" update_source="constant">true</update_state_variable>
                            <update_state_variable name="trapThumb" update_type="set" update_source="constant">true</update_state_variable>
                            <command_interface interface="ip">
                                <command response_required="no">
                                    <command_string type="character">{"jsonrpc":"2.0","method":"Player.GetItem","params":{"playerid":1,"properties":["title", "episode", "season", "showtitle"]},"id":"1"}</command_string>
                                    <delay ms_delay="100"/>
                                </command>
                            </command_interface>
                        </action>
                        <action name="StartPosCheck_Movie">
                            <execute_on_state_variable_condition name="currentType" test_condition="equal">movie</execute_on_state_variable_condition>
                            <execute_on_state_variable_condition name="currentlyDoing" test_condition="equal">Player.OnPlay</execute_on_state_variable_condition>
                            <update_state_variable name="getPosistion" update_type="set" update_source="constant">true</update_state_variable>
                            <update_state_variable name="isTVShow" update_type="set" update_source="constant">false</update_state_variable>
                            <update_state_variable name="isPlay" update_type="set" update_source="constant">true</update_state_variable>
                            <update_state_variable name="trapThumb" update_type="set" update_source="constant">true</update_state_variable>
                            <command_interface interface="ip">
                                <command response_required="no">
                                    <command_string type="character">{"jsonrpc":"2.0","method":"Player.GetItem","params":{"playerid":1,"properties":["title", "year"]},"id":"1"}</command_string>
                                    <delay ms_delay="100"/>
                                </command>
                            </command_interface>
                        </action>
                        <action name="GetPoster">
                            <execute_on_state_variable_condition name="isPlay" test_condition="equal">true</execute_on_state_variable_condition>
                            <command_interface interface="ip">
                                <command response_required="no">
                                    <command_string type="character">{"jsonrpc":"2.0","method":"Player.GetItem","params":{"playerid":1,"properties":["fanart"]},"id":"1"}</command_string>
                                    <delay ms_delay="100"/>
                                </command>
                            </command_interface>
                        </action>
                        <action name="GetMediaInfo">
                            <execute_on_state_variable_condition name="isPlay" test_condition="equal">true</execute_on_state_variable_condition>
                            <command_interface interface="ip">
                                <command response_required="no">
                                    <command_string type="character">{"jsonrpc":"2.0","method":"XBMC.GetInfoLabels","params":{"labels":["VideoPlayer.VideoAspect", "VideoPlayer.VideoResolution", "VideoPlayer.VideoCodec", "VideoPlayer.AudioCodec", "VideoPlayer.AudioChannels"]},"id":"1"}</command_string>
                                    <delay ms_delay="100"/>
                                </command>
                            </command_interface>
                        </action>
                    </actions>
                </run_elements>
            </status_message>
        </status_messages>
        <universal_component_actions>
            <action name="PowerOn">
                <execute_on_state_variable_condition name="currentlyDoing" test_condition="equal">GUI.OnScreensaverActivated</execute_on_state_variable_condition>
                <execute_on_state_variable_condition name="Power_current_power_setting" test_condition="not_equal">ON</execute_on_state_variable_condition>
                <update_state_variable name="Power_current_power_setting" update_type="set" update_source="constant">ON</update_state_variable>
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ShowCodec","id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="PowerOff">
                <execute_on_state_variable_condition name="Power_current_power_setting" test_condition="not_equal">OFF</execute_on_state_variable_condition>
                <update_state_variable name="Power_current_power_setting" update_type="set" update_source="constant">OFF</update_state_variable>
                <update_state_variable name="getPosistion" update_type="set" update_source="constant">false</update_state_variable>
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.Stop","params":{"playerid":1},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
        </universal_component_actions>
        <resource_component_actions resource_type="AV_VOLUMECONTROL_FUNCTION">
            <action name="IncreaseVolume">
                <update_volume_variables name="Volume_current_volume" update_type="increment" update_source="constant">1</update_volume_variables>
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Application.SetVolume","params":{"volume":"increment"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="DecreaseVolume">
                <update_volume_variables name="Volume_current_volume" update_type="decrement" update_source="constant">1</update_volume_variables>
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Application.SetVolume","params":{"volume":"decrement"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="SetVolume">
                <action_argument name="VolumeValue" note="Select the Volume Level (0 - 50)"/>
                <update_volume_variables name="Volume_current_volume" update_type="set" update_source="action_argument">VolumeValue</update_volume_variables>
                <command_interface interface="ip">
                    <command response_required="yes" partial_response="yes">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Application.SetVolume","params":{"volume":</command_string>
                        <parameter_list>
                            <volume_parameter volume_state_variable="Volume_current_volume" parameter_total_width="3" parameter_data_type="character" action_argument="VolumeValue"/>
                            <parameter parameter_data_type="character">},"id":"1"}</parameter>
                        </parameter_list>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="MuteOff">
                <execute_on_state_variable_condition name="Mute_current_mute_setting" test_condition="not_equal">OFF</execute_on_state_variable_condition>
                <update_state_variable name="Mute_current_mute_setting" update_type="set" update_source="constant">OFF</update_state_variable>
                <command_interface interface="ip">
                    <command response_required="yes" partial_response="yes">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Application.SetMute","params":{"mute":false},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="MuteOn">
                <execute_on_state_variable_condition name="Mute_current_mute_setting" test_condition="not_equal">ON</execute_on_state_variable_condition>
                <update_state_variable name="Mute_current_mute_setting" update_type="set" update_source="constant">ON</update_state_variable>
                <command_interface interface="ip">
                    <command response_required="yes" partial_response="yes">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Application.SetMute","params":{"mute":true},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
        </resource_component_actions>
        <resource_component_actions resource_type="AV_EXTERNALMEDIASERVER_SOURCE">
            <action name="Repeat">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.SetRepeat","params":{"playerid":1,"repeat":"cycle"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Select">
                <!--<update_state_variable name="trapThumb" update_type="set" update_source="constant">0</update_state_variable>-->
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.Select","id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="OSDCursorUp">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.Up","id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="OSDCursorDown">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.Down","id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="OSDCursorLeft">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.Left","id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="OSDCursorRight">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.Right","id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Exit">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.Back","id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Play">
                <update_state_variable name="isPlay" update_type="set" update_source="constant">true</update_state_variable>
                <update_state_variable name="getPosistion" update_type="set" update_source="constant">true</update_state_variable>
                <!--<update_state_variable name="trapThumb" update_type="set" update_source="constant">0</update_state_variable>-->
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"play"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Pause">
                <update_state_variable name="isPlay" update_type="set" update_source="constant">false</update_state_variable>
                <update_state_variable name="getPosistion" update_type="set" update_source="constant">false</update_state_variable>
                <!--<update_state_variable name="trapThumb" update_type="set" update_source="constant">0</update_state_variable>-->
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"pause"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Stop">
                <update_state_variable name="isPlay" update_type="set" update_source="constant">false</update_state_variable>
                <update_state_variable name="getPosistion" update_type="set" update_source="constant">false</update_state_variable>
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.Stop","params":{"playerid":1},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="ScanUp">
                <update_state_variable name="isPlay" update_type="set" update_source="constant">false</update_state_variable>
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.SetSpeed","params":{"playerid":1,"speed":"increment"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="ScanDown">
                <update_state_variable name="isPlay" update_type="set" update_source="constant">false</update_state_variable>
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.SetSpeed","params":{"playerid":1,"speed":"decrement"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="StepUp">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.Seek","params":{"playerid":1,"value":"bigforward"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="StepDown">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.Seek","params":{"playerid":1,"value":"bigbackward"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="SkipUp">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.GoTo","params":{"playerid":1,"to":"next"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="SkipDown">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.Goto","params":{"playerid":1,"to":"previous"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Info">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.Info","id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Setup">
                <!--     Substituting for OSD       -->
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ShowOSD","id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Menu">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ContextMenu","id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ShowOSD","id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Subtitle">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.SetSubtitle","params":{"playerid":1,"subtitle":"next","enable":true},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Zoom">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"zoomin"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="PageUp">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"pageup"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="PageDown">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"pagedown"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Home">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.Home","id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Audio">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.SetAudioStream","params":{"playerid":1,"stream":"next"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Repeat">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.SetRepeat","params":{"playerid":1,"repeat":"cycle"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Random">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.SetShuffle","params":{"playerid":1,"shuffle":"toggle"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="NumberZero">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"number0"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="NumberOne">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"number1"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="NumberTwo">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"number2"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="NumberThree">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"number3"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="NumberFour">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"number4"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="NumberFive">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"number5"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="NumberSix">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"number6"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="NumberSeven">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"number7"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="NumberEight">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"number8"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="NumberNine">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"number9"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="NumberEnter">
                <!--     Substituting for Now Playing       -->
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"fullscreen"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Enter">
                <!--     Substituting for Now Playing       -->
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"fullscreen"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Red">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.SetSubtitle","params":{"playerid":1,"subtitle":"off"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Blue">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.Zoom","params":{"playerid":1,"zoom":1},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Green">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"togglewatched"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="Yellow">
                <action_argument name="SeekValue"/>
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.Seek","params":{"playerid":1,"value":</command_string>
                        <parameter_list>
                            <parameter parameter_data_type="character" action_argument="SeekValue"/>
                            <parameter parameter_data_type="character">},"id":"1"}</parameter>
                        </parameter_list>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="UpdateStatus">
                <action_argument name="String"/>
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.SendText","params":{"text":"</command_string>
                        <parameter_list>
                            <parameter parameter_data_type="character" action_argument="String"/>
                            <parameter parameter_data_type="character">","done":true},"id":"1"}</parameter>
                        </parameter_list>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="NumberPlusTen">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Input.ExecuteAction","params":{"action":"fullscreen"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
        </resource_component_actions>
        <custom_component_actions>
            <action name="SubtitleOff">
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.SetSubtitle","params":{"playerid":1,"subtitle":"off"},"id":"1"}</command_string>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="DisplayMessage">
                <action_argument name="Title"/>
                <action_argument name="Message"/>
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"GUI.ShowNotification","params":{"title":"</command_string>
                        <parameter_list>
                            <parameter parameter_data_type="character" action_argument="Title"/>
                            <parameter parameter_data_type="character">","message":"</parameter>
                            <parameter parameter_data_type="character" action_argument="Message"/>
                            <parameter parameter_data_type="character">"},"id":"1"}</parameter>
                        </parameter_list>
                        <delay ms_delay="50"/>
                    </command>
                </command_interface>
            </action>
            <action name="GetPosistion">
                <execute_on_state_variable_condition name="getPosistion" test_condition="equal">true</execute_on_state_variable_condition>
                <command_interface interface="ip">
                    <command response_required="no">
                        <command_string type="character">{"jsonrpc":"2.0","method":"Player.GetProperties","params":{"playerid":1,"properties":["percentage","time","totaltime"]},"id":"1"}</command_string>
                        <delay ms_delay="25"/>
                    </command>
                </command_interface>
                <execute_on_schedule period_ms="1000"/>
            </action>
        </custom_component_actions>
    </logical_component>
</component>
